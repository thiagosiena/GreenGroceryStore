/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controller.ProductDAO;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import model.Product;
import model.User;

/**
 *
 * @author Tzh
 */
public class StockView extends javax.swing.JFrame {

    private final User user;

    public StockView(User u) {
        initComponents();
        this.setTitle("Stock Interface");
        this.setResizable(false);
        this.user = u;
        if (u != null) {
            userNameLabel.setText(u.getName());
        }
        DefaultComboBoxModel box1 = new DefaultComboBoxModel();
        DefaultComboBoxModel box2 = new DefaultComboBoxModel();
        DefaultComboBoxModel box3 = new DefaultComboBoxModel();
        DefaultComboBoxModel box4 = new DefaultComboBoxModel();
        ComboBox1.setModel(box1);
        ComboBox2.setModel(box2);
        ComboBox3.setModel(box3);
        ComboBox4.setModel(box4);
        populateComboBox(ComboBox1);
        populateComboBox(ComboBox2);
        populateComboBox(ComboBox3);
        populateComboBox(ComboBox4);
        configureTable();
        populateTable(table1);
        this.setLocationRelativeTo(null);
    }

    private void updateTable(JTable table) {

        DefaultTableModel defaultM = new DefaultTableModel();
        table.setModel(defaultM);
        configureTable();
        table.setModel(populateTable(table));

    }

    private void updateComboBox(JComboBox<String> box) {

        DefaultComboBoxModel defaultC = new DefaultComboBoxModel();
        box.setModel(defaultC);
        box.setModel(populateComboBox(box));

    }

    private DefaultComboBoxModel populateComboBox(JComboBox<String> comboBox) {
        List<Product> list = new ProductDAO().list();
        DefaultComboBoxModel box = (DefaultComboBoxModel) comboBox.getModel();

        for (Product p : list) {
            box.addElement(p);
        }
        return box;

    }

    private DefaultTableModel populateTable(JTable table) {
        List<Product> list = new ProductDAO().list();
        DefaultTableModel tableM = (DefaultTableModel) table.getModel();
        for (Product p : list) {
            tableM.addRow(new Object[]{p.getCode(), p.getName(), p.getPrice(), p.getQnt()});

        }
        return tableM;

    }

    private void configureTable() {

        DefaultTableModel model = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;

            }

        };

        model.addColumn("code");
        model.addColumn("product name");
        model.addColumn("unit price");
        model.addColumn("quantity");

        table1.setModel(model);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        productField = new javax.swing.JTextField();
        qntField = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table1 = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        unitField = new javax.swing.JTextField();
        codeField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        ComboBox1 = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        moreField = new javax.swing.JTextField();
        addMoreButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        newPriceField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        ComboBox2 = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        lessField = new javax.swing.JTextField();
        SubtractButton = new javax.swing.JButton();
        newPriceButton = new javax.swing.JButton();
        ComboBox3 = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        ComboBox4 = new javax.swing.JComboBox<>();
        deleteButton = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        userNameLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        backButton.setText("Back");
        backButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Product Name");

        jLabel2.setText("Quantity");

        jLabel3.setText("Unit Price");

        jLabel4.setForeground(new java.awt.Color(0, 204, 204));
        jLabel4.setText("REGISTER NEW PRODUCT");

        productField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productFieldActionPerformed(evt);
            }
        });

        qntField.setMaximumSize(new java.awt.Dimension(170, 50));
        qntField.setMinimumSize(new java.awt.Dimension(120, 50));
        qntField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qntFieldActionPerformed(evt);
            }
        });

        addButton.setText("Register");
        addButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(table1);

        jLabel5.setText("Code");

        unitField.setMaximumSize(new java.awt.Dimension(170, 50));
        unitField.setMinimumSize(new java.awt.Dimension(120, 50));
        unitField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unitFieldActionPerformed(evt);
            }
        });

        codeField.setMaximumSize(new java.awt.Dimension(170, 50));
        codeField.setMinimumSize(new java.awt.Dimension(120, 50));
        codeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codeFieldActionPerformed(evt);
            }
        });

        jLabel6.setForeground(new java.awt.Color(0, 204, 204));
        jLabel6.setText("ADD PRODUCTS");

        ComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel7.setText("Quantity");

        moreField.setMaximumSize(new java.awt.Dimension(170, 50));
        moreField.setMinimumSize(new java.awt.Dimension(120, 50));
        moreField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moreFieldActionPerformed(evt);
            }
        });

        addMoreButton.setText("Add");
        addMoreButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addMoreButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMoreButtonActionPerformed(evt);
            }
        });

        jLabel8.setForeground(new java.awt.Color(0, 204, 204));
        jLabel8.setText("CHANGE PRICE");

        newPriceField.setMaximumSize(new java.awt.Dimension(170, 50));
        newPriceField.setMinimumSize(new java.awt.Dimension(120, 50));
        newPriceField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPriceFieldActionPerformed(evt);
            }
        });

        jLabel10.setForeground(new java.awt.Color(0, 204, 204));
        jLabel10.setText("SUBTRACT PRODUCTS");

        ComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel11.setText("Quantity");

        lessField.setMaximumSize(new java.awt.Dimension(170, 50));
        lessField.setMinimumSize(new java.awt.Dimension(120, 50));
        lessField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lessFieldActionPerformed(evt);
            }
        });

        SubtractButton.setText("Subtract");
        SubtractButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SubtractButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubtractButtonActionPerformed(evt);
            }
        });

        newPriceButton.setText("Change");
        newPriceButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        newPriceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPriceButtonActionPerformed(evt);
            }
        });

        ComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel12.setText("Price");

        jLabel9.setForeground(new java.awt.Color(0, 204, 204));
        jLabel9.setText("DELETE PRODUCT");

        ComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        deleteButton.setText("Delete");
        deleteButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        jLabel13.setForeground(new java.awt.Color(0, 204, 204));
        jLabel13.setText("__________________________________________________________________");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 204, 204));
        jLabel14.setText("Stock");

        jLabel16.setText("Operator");

        userNameLabel.setForeground(new java.awt.Color(0, 204, 204));
        userNameLabel.setText(" ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(newPriceField, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(newPriceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel12)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lessField, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SubtractButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel9)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(ComboBox4, javax.swing.GroupLayout.Alignment.LEADING, 0, 138, Short.MAX_VALUE)
                            .addComponent(ComboBox1, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(moreField, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addMoreButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(deleteButton)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(codeField, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(productField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(unitField, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, 0)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(qntField, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15)
                                    .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(userNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(backButton)
                .addGap(19, 19, 19))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel15)
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel16)
                        .addComponent(userNameLabel))
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3))
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton)
                    .addComponent(qntField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(productField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(unitField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(codeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteButton))
                .addGap(4, 4, 4)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addGap(24, 24, 24))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(17, 17, 17)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(moreField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(addMoreButton))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel11)
                            .addGap(24, 24, 24))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(17, 17, 17)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lessField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(SubtractButton)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(0, 0, 0)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(newPriceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newPriceButton)
                            .addComponent(ComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addComponent(jLabel14)
                        .addGap(0, 0, 0)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(backButton)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        MainView m = new MainView(user);
        this.dispose();
        m.setVisible(true);
    }//GEN-LAST:event_backButtonActionPerformed

    private void productFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_productFieldActionPerformed

    private void qntFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qntFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qntFieldActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed

        try {
            int code = Integer.parseInt(codeField.getText());
            String name = productField.getText();
            float price = Float.parseFloat(unitField.getText());
            int qnt = Integer.parseInt(qntField.getText());
            Product p = new Product(code, name, price, qnt);
            ProductDAO pd = new ProductDAO();
            if (name.isEmpty() || codeField.getText().isEmpty() || unitField.getText().isEmpty() || qntField.getText().isEmpty()) {

                JOptionPane.showMessageDialog(null, "Fill all the fields", "ERROR", JOptionPane.ERROR_MESSAGE);
            } else {

                if (name.matches("^(?=.*[a-zA-Z])[a-zA-Z0-9\\\\s]{1,50}$")) {
                    int rs = pd.insert(p);
                    if (rs == -1) {
                        productField.setText("");
                        codeField.setText("");
                        unitField.setText("");
                        qntField.setText("");
                        JOptionPane.showMessageDialog(null, "Product already registered", "ERROR", JOptionPane.ERROR_MESSAGE);
                    } else if (rs == -2) {
                        unitField.setText("");
                        qntField.setText("");

                        JOptionPane.showMessageDialog(null, "Only positive numbers in price and qnt fields", "ERROR", JOptionPane.ERROR_MESSAGE);
                    } else {
                        productField.setText("");
                        codeField.setText("");
                        unitField.setText("");
                        qntField.setText("");
                        updateComboBox(ComboBox1);
                        updateComboBox(ComboBox2);
                        updateComboBox(ComboBox3);
                        updateComboBox(ComboBox4);
                        updateTable(table1);
                        JOptionPane.showMessageDialog(null, "New product registered successfully", "SUCCESS", JOptionPane.NO_OPTION);
                    }

                } else {
                    JOptionPane.showMessageDialog(null, "Invalid Name", "ERROR", JOptionPane.ERROR_MESSAGE);
                }

            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Only  accept numbers on the code, price and qnt fields", "ERROR", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_addButtonActionPerformed

    private void unitFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unitFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_unitFieldActionPerformed

    private void codeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codeFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codeFieldActionPerformed

    private void moreFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moreFieldActionPerformed


    }//GEN-LAST:event_moreFieldActionPerformed

    private void addMoreButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMoreButtonActionPerformed

        try {
            Product p = (Product) ComboBox1.getSelectedItem();
            int qnt = Integer.parseInt(moreField.getText());
            ProductDAO pd = new ProductDAO();
            if (pd.addQnt(p, qnt) != -1) {
                updateTable(table1);
                JOptionPane.showMessageDialog(null, "the products were added", "SUCCESS", JOptionPane.NO_OPTION);
                moreField.setText("");
            } else {
                moreField.setText("");
                JOptionPane.showMessageDialog(null, "Only positive numbers!", "ERROR", JOptionPane.ERROR_MESSAGE);
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Only  accept numbers on the qnt field", "ERROR", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_addMoreButtonActionPerformed

    private void newPriceFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newPriceFieldActionPerformed
        //
    }//GEN-LAST:event_newPriceFieldActionPerformed

    private void lessFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lessFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lessFieldActionPerformed

    private void SubtractButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubtractButtonActionPerformed

        try {
            Product p = (Product) ComboBox2.getSelectedItem();
            int qnt = Integer.parseInt(lessField.getText());
            ProductDAO pd = new ProductDAO();
            int rs = pd.subQnt(p, qnt);
            if (rs == 0) {
                updateTable(table1);
                JOptionPane.showMessageDialog(null, "The products were subtracted propely", "SUCCESS", JOptionPane.NO_OPTION);
                lessField.setText("");
            } else {
                if (rs == -2) {
                    JOptionPane.showMessageDialog(null, "Please enter a number equal or less than to what is in stock", "ERROR", JOptionPane.ERROR_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "Only positive numbers!", "ERROR", JOptionPane.ERROR_MESSAGE);
                }

            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Only  accept numbers on the qnt field", "ERROR", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_SubtractButtonActionPerformed

    private void newPriceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newPriceButtonActionPerformed
        try {
            Product p = (Product) ComboBox3.getSelectedItem();
            float price = Float.parseFloat(newPriceField.getText());
            ProductDAO pd = new ProductDAO();
            int rs = pd.updatePrice(p, price);
            if (rs != -1) {
                updateTable(table1);
                JOptionPane.showMessageDialog(null, "The price was updated successfully", "SUCCESS", JOptionPane.NO_OPTION);
                newPriceField.setText("");
            } else if (rs == -1) {
                newPriceField.setText("");
                JOptionPane.showMessageDialog(null, "Only positive numbers!", "ERROR", JOptionPane.ERROR_MESSAGE);
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Only  accept numbers on the price field", "ERROR", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_newPriceButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed

        try {
            Product p = (Product) ComboBox4.getSelectedItem();
            ProductDAO pd = new ProductDAO();
            if (pd.remove(p) != -1) {
                updateTable(table1);
                updateComboBox(ComboBox1);
                updateComboBox(ComboBox2);
                updateComboBox(ComboBox3);
                updateComboBox(ComboBox4);

                JOptionPane.showMessageDialog(null, "The products were deleted propely", "SUCCESS", JOptionPane.NO_OPTION);
            } else {
                JOptionPane.showMessageDialog(null, "ERROR", "ERROR", JOptionPane.ERROR_MESSAGE);
            }

        } catch (Exception e) {

            System.err.println("ERRO: " + e.getMessage());
        }

    }//GEN-LAST:event_deleteButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StockView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StockView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StockView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StockView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StockView(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboBox1;
    private javax.swing.JComboBox<String> ComboBox2;
    private javax.swing.JComboBox<String> ComboBox3;
    private javax.swing.JComboBox<String> ComboBox4;
    private javax.swing.JButton SubtractButton;
    private javax.swing.JButton addButton;
    private javax.swing.JButton addMoreButton;
    private javax.swing.JButton backButton;
    private javax.swing.JTextField codeField;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lessField;
    private javax.swing.JTextField moreField;
    private javax.swing.JButton newPriceButton;
    private javax.swing.JTextField newPriceField;
    private javax.swing.JTextField productField;
    private javax.swing.JTextField qntField;
    private javax.swing.JTable table1;
    private javax.swing.JTextField unitField;
    private javax.swing.JLabel userNameLabel;
    // End of variables declaration//GEN-END:variables
}
